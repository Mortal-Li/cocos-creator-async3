"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const package_json_1 = __importDefault(require("../../package.json"));
const fs_extra_1 = require("fs-extra");
class KKUtils {
    static sleepAsy(t) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve();
            }, t * 1000);
        });
    }
    static getPluginPath() {
        return (0, path_1.join)(Editor.Project.path, "extensions", package_json_1.default.name);
    }
    static getConfUrl(pfx) {
        return `db://assets/Boot/Scripts/${pfx}GameUIConf.ts`;
    }
    static removePfxAndSfx(s, pfx, sfx) {
        return s.substring(pfx.length, s.length - sfx.length);
    }
    static url2pathAsy(url) {
        return new Promise((resolve, reject) => {
            Editor.Message.request('asset-db', 'query-path', url)
                .then((str) => {
                resolve(str ? str : "");
            })
                .catch(reject);
        });
    }
    static uuid2pathAsy(uuid) {
        return KKUtils.url2pathAsy(uuid);
    }
    static url2uuidAsy(url) {
        return new Promise((resolve, reject) => {
            Editor.Message.request('asset-db', 'query-uuid', url)
                .then((str) => {
                resolve(str ? str : "");
            })
                .catch(reject);
        });
    }
    /**
     * 如果有嵌套资源，子资源要在后面更新，否则编辑器不显示，需要手动刷新
     */
    static refreshResAsy(urlOrUuid) {
        return Editor.Message.request('asset-db', 'refresh-asset', urlOrUuid);
    }
    static genSceneAsy(url) {
        return KKUtils.genAssetsAsy(url, "db://internal/default_file_content/scene-2d");
    }
    static async genAssetsAsy(targetUrl, templateUrl) {
        let url = await Editor.Message.request('asset-db', 'generate-available-url', targetUrl);
        let templatePath = await KKUtils.url2pathAsy(templateUrl);
        let infoContent = (0, fs_extra_1.readFileSync)(templatePath).toString();
        await Editor.Message.request('asset-db', 'create-asset', url, infoContent, {});
        console.log(`gen ${targetUrl} successfully`);
    }
    static async openSceneAsy(url) {
        let uuid = await KKUtils.url2uuidAsy(url);
        await Editor.Message.request('scene', 'open-scene', uuid);
    }
    static saveSceneAsy() {
        return Editor.Message.request('scene', 'save-scene');
    }
    static genCompAsy(nodeUuid, compName) {
        return Editor.Message.request('scene', 'create-component', {
            uuid: nodeUuid,
            component: compName
        });
    }
    static getSceneRootNodeInfoAsy() {
        return Editor.Message.request('scene', 'query-node-tree');
    }
    static getNodeInfoAsy(nodeUuid) {
        return Editor.Message.request('scene', 'query-node', nodeUuid);
    }
    static getCompInfoAsy(compUuid) {
        return Editor.Message.request('scene', 'query-component', compUuid);
    }
    static setPropertyAsy(scriptNodeUuid, scriptOrder, propName, propType, propUUid) {
        return Editor.Message.request('scene', 'set-property', {
            uuid: scriptNodeUuid,
            path: `__comps__.${scriptOrder}.${propName}`,
            dump: {
                type: propType,
                value: {
                    uuid: propUUid,
                },
            },
        });
    }
}
exports.default = KKUtils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS0tVdGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9jb3JlL0tLVXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSwrQkFBNEI7QUFDNUIsc0VBQTZDO0FBQzdDLHVDQUF3QztBQUV4QyxNQUFxQixPQUFPO0lBQ3hCLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBUztRQUNyQixPQUFPLElBQUksT0FBTyxDQUFPLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3pDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ1osT0FBTyxFQUFFLENBQUM7WUFDZCxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ2pCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELE1BQU0sQ0FBQyxhQUFhO1FBQ2hCLE9BQU8sSUFBQSxXQUFJLEVBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLHNCQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBVztRQUN6QixPQUFPLDRCQUE0QixHQUFHLGVBQWUsQ0FBQztJQUMxRCxDQUFDO0lBRUQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFTLEVBQUUsR0FBVyxFQUFFLEdBQVc7UUFDdEQsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVELE1BQU0sQ0FBQyxXQUFXLENBQUMsR0FBVztRQUMxQixPQUFPLElBQUksT0FBTyxDQUFTLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQzNDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxZQUFZLEVBQUUsR0FBRyxDQUFDO2lCQUNwRCxJQUFJLENB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QztJQUM5RCxDQUFDO0lBRUQsTUFBTSxDQUFDLGNBQWMsQ0FBQyxRQUFnQjtRQUNsQyxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUVELE1BQU0sQ0FBQyxjQUFjLENBQUMsUUFBZ0I7UUFDbEMsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELE1BQU0sQ0FBQyxjQUFjLENBQUMsY0FBc0IsRUFBRSxXQUFtQixFQUFFLFFBQWdCLEVBQUUsUUFBZ0IsRUFBRSxRQUFnQjtRQUNuSCxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUU7WUFDbkQsSUFBSSxFQUFFLGNBQWM7WUFDcEIsSUFBSSxFQUFFLGFBQWEsV0FBVyxJQUFJLFFBQVEsRUFBRTtZQUM1QyxJQUFJLEVBQUU7Z0JBQ0YsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsS0FBSyxFQUFFO29CQUNILElBQUksRUFBRSxRQUFRO2lCQUNqQjthQUNKO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKO0FBekdELDBCQXlHQyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCc7XHJcbmltcG9ydCBwYWNrYWdlSlNPTiBmcm9tICcuLi8uLi9wYWNrYWdlLmpzb24nO1xyXG5pbXBvcnQgeyByZWFkRmlsZVN5bmMgfSBmcm9tICdmcy1leHRyYSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLS1V0aWxzIHtcclxuICAgIHN0YXRpYyBzbGVlcEFzeSh0OiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICAgICAgfSwgdCAqIDEwMDApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXRQbHVnaW5QYXRoKCkge1xyXG4gICAgICAgIHJldHVybiBqb2luKEVkaXRvci5Qcm9qZWN0LnBhdGgsIFwiZXh0ZW5zaW9uc1wiLCBwYWNrYWdlSlNPTi5uYW1lKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0Q29uZlVybChwZng6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiBgZGI6Ly9hc3NldHMvQm9vdC9TY3JpcHRzLyR7cGZ4fUdhbWVVSUNvbmYudHNgO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyByZW1vdmVQZnhBbmRTZngoczogc3RyaW5nLCBwZng6IHN0cmluZywgc2Z4OiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gcy5zdWJzdHJpbmcocGZ4Lmxlbmd0aCwgcy5sZW5ndGggLSBzZngubGVuZ3RoKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgdXJsMnBhdGhBc3kodXJsOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8c3RyaW5nPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIEVkaXRvci5NZXNzYWdlLnJlcXVlc3QoJ2Fzc2V0LWRiJywgJ3F1ZXJ5LXBhdGgnLCB1cmwpXHJcbiAgICAgICAgICAgIC50aGVuKChzdHIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoc3RyID8gc3RyIDogXCJcIik7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaChyZWplY3QpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyB1dWlkMnBhdGhBc3kodXVpZDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIEtLVXRpbHMudXJsMnBhdGhBc3kodXVpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHVybDJ1dWlkQXN5KHVybDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPHN0cmluZz4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdhc3NldC1kYicsICdxdWVyeS11dWlkJywgdXJsKVxyXG4gICAgICAgICAgICAudGhlbigoc3RyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHN0ciA/IHN0ciA6IFwiXCIpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWmguaenOacieW1jOWll+i1hOa6kO+8jOWtkOi1hOa6kOimgeWcqOWQjumdouabtOaWsO+8jOWQpuWImee8lui+keWZqOS4jeaYvuekuu+8jOmcgOimgeaJi+WKqOWIt+aWsFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgcmVmcmVzaFJlc0FzeSh1cmxPclV1aWQ6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdhc3NldC1kYicsICdyZWZyZXNoLWFzc2V0JywgdXJsT3JVdWlkKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2VuU2NlbmVBc3kodXJsOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gS0tVdGlscy5nZW5Bc3NldHNBc3kodXJsLCBcImRiOi8vaW50ZXJuYWwvZGVmYXVsdF9maWxlX2NvbnRlbnQvc2NlbmUtMmRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGdlbkFzc2V0c0FzeSh0YXJnZXRVcmw6IHN0cmluZywgdGVtcGxhdGVVcmw6IHN0cmluZykge1xyXG4gICAgICAgIGxldCB1cmwgPSBhd2FpdCBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdhc3NldC1kYicsICdnZW5lcmF0ZS1hdmFpbGFibGUtdXJsJywgdGFyZ2V0VXJsKTtcclxuICAgICAgICBsZXQgdGVtcGxhdGVQYXRoID0gYXdhaXQgS0tVdGlscy51cmwycGF0aEFzeSh0ZW1wbGF0ZVVybCk7XHJcbiAgICAgICAgbGV0IGluZm9Db250ZW50ID0gcmVhZEZpbGVTeW5jKHRlbXBsYXRlUGF0aCkudG9TdHJpbmcoKTtcclxuXHJcbiAgICAgICAgYXdhaXQgRWRpdG9yLk1lc3NhZ2UucmVxdWVzdCgnYXNzZXQtZGInLCAnY3JlYXRlLWFzc2V0JywgdXJsLCBpbmZvQ29udGVudCwge30pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBnZW4gJHt0YXJnZXRVcmx9IHN1Y2Nlc3NmdWxseWApO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhc3luYyBvcGVuU2NlbmVBc3kodXJsOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgdXVpZCA9IGF3YWl0IEtLVXRpbHMudXJsMnV1aWRBc3kodXJsKTtcclxuICAgICAgICBhd2FpdCBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdzY2VuZScsICdvcGVuLXNjZW5lJywgdXVpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHNhdmVTY2VuZUFzeSgpIHtcclxuICAgICAgICByZXR1cm4gRWRpdG9yLk1lc3NhZ2UucmVxdWVzdCgnc2NlbmUnLCAnc2F2ZS1zY2VuZScpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZW5Db21wQXN5KG5vZGVVdWlkOiBzdHJpbmcsIGNvbXBOYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gRWRpdG9yLk1lc3NhZ2UucmVxdWVzdCgnc2NlbmUnLCAnY3JlYXRlLWNvbXBvbmVudCcsIHsgXHJcbiAgICAgICAgICAgIHV1aWQ6IG5vZGVVdWlkLFxyXG4gICAgICAgICAgICBjb21wb25lbnQ6IGNvbXBOYW1lXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldFNjZW5lUm9vdE5vZGVJbmZvQXN5KCkge1xyXG4gICAgICAgIHJldHVybiBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdzY2VuZScsICdxdWVyeS1ub2RlLXRyZWUnKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0Tm9kZUluZm9Bc3kobm9kZVV1aWQ6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdzY2VuZScsICdxdWVyeS1ub2RlJywgbm9kZVV1aWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXRDb21wSW5mb0FzeShjb21wVXVpZDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIEVkaXRvci5NZXNzYWdlLnJlcXVlc3QoJ3NjZW5lJywgJ3F1ZXJ5LWNvbXBvbmVudCcsIGNvbXBVdWlkKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgc2V0UHJvcGVydHlBc3koc2NyaXB0Tm9kZVV1aWQ6IHN0cmluZywgc2NyaXB0T3JkZXI6IG51bWJlciwgcHJvcE5hbWU6IHN0cmluZywgcHJvcFR5cGU6IHN0cmluZywgcHJvcFVVaWQ6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdzY2VuZScsICdzZXQtcHJvcGVydHknLCB7XHJcbiAgICAgICAgICAgIHV1aWQ6IHNjcmlwdE5vZGVVdWlkLFxyXG4gICAgICAgICAgICBwYXRoOiBgX19jb21wc19fLiR7c2NyaXB0T3JkZXJ9LiR7cHJvcE5hbWV9YCxcclxuICAgICAgICAgICAgZHVtcDoge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogcHJvcFR5cGUsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHV1aWQ6IHByb3BVVWlkLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSJdfQ==